{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"BabelBrain v0.4.0 Aug 23th, 2024. Samuel Pichardo, Ph.D Associate Professor Radiology and Clinical Neurosciences, Hotchkiss Brain Institute Cumming School of Medicine, University of Calgary samuel.pichardo@ucalgary.ca www.neurofus.ca GUI application for the modeling of transcranial ultrasound for neuromodulation applications BabelBrain is a frontend application for research purposes only in the study of applications of transcranial focused ultrasound. BabelBrain calculates the transmitted acoustic field in the brain tissue, considering the distortion effects caused by the skull barrier. BabelBrain also calculates the thermal effects of a given ultrasound regime, which is regulated mainly by the total duration of ultrasound exposure, the duty cycle of ultrasound use, and the peak acoustic intensity, BabelBrain is designed to work in tandem with neuronavigation and/or visualization software (such as Rogue Research's Brainsight or 3DSlicer). This tool combines image processing to prepare domains for ultrasound simulation and uses BabelViscoFDTD extensively for transcranial modeling calculations. BabelViscoFDTD is a finite-difference time-difference solver of isotropic viscoelastic equation, which was implemented to support multiple GPU backends (Metal, OpenCL and CUDA). Predictions of BabelViscoFDTD have been validated experimentally ( Pichardo et al. , 2017 ) and cross-validated with other numerical tools for ultrasound propagation ( Aubry et al. , 2022 ). BabelBrain supports multiple GPU backends (Metal, OpenCL and CUDA) and works in all major operating systems, with an emphasis on Apple ARM64-based systems, which are very common in brain imaging research. Citation If you find BabelBrain useful for your research, please consider adding a citation to: Pichardo S. BabelBrain: An Open-Source Application for Prospective Modeling of Transcranial Focused Ultrasound for Neuromodulation Applications. IEEE Trans Ultrason Ferroelectr Freq Control. 2023 Jul;70(7):587-599. doi: 10.1109/TUFFC.2023.3274046 . Epub 2023 Jun 29. PMID: 37155375. Disclaimer This software is provided \"as is\" and it is intended exclusively for research purposes. Licensing BSD 3-Clause License Copyright (c) 2022,2023 Samuel Pichardo All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Home"},{"location":"index.html#babelbrain","text":"v0.4.0 Aug 23th, 2024. Samuel Pichardo, Ph.D Associate Professor Radiology and Clinical Neurosciences, Hotchkiss Brain Institute Cumming School of Medicine, University of Calgary samuel.pichardo@ucalgary.ca www.neurofus.ca GUI application for the modeling of transcranial ultrasound for neuromodulation applications BabelBrain is a frontend application for research purposes only in the study of applications of transcranial focused ultrasound. BabelBrain calculates the transmitted acoustic field in the brain tissue, considering the distortion effects caused by the skull barrier. BabelBrain also calculates the thermal effects of a given ultrasound regime, which is regulated mainly by the total duration of ultrasound exposure, the duty cycle of ultrasound use, and the peak acoustic intensity, BabelBrain is designed to work in tandem with neuronavigation and/or visualization software (such as Rogue Research's Brainsight or 3DSlicer). This tool combines image processing to prepare domains for ultrasound simulation and uses BabelViscoFDTD extensively for transcranial modeling calculations. BabelViscoFDTD is a finite-difference time-difference solver of isotropic viscoelastic equation, which was implemented to support multiple GPU backends (Metal, OpenCL and CUDA). Predictions of BabelViscoFDTD have been validated experimentally ( Pichardo et al. , 2017 ) and cross-validated with other numerical tools for ultrasound propagation ( Aubry et al. , 2022 ). BabelBrain supports multiple GPU backends (Metal, OpenCL and CUDA) and works in all major operating systems, with an emphasis on Apple ARM64-based systems, which are very common in brain imaging research.","title":"BabelBrain"},{"location":"index.html#citation","text":"If you find BabelBrain useful for your research, please consider adding a citation to: Pichardo S. BabelBrain: An Open-Source Application for Prospective Modeling of Transcranial Focused Ultrasound for Neuromodulation Applications. IEEE Trans Ultrason Ferroelectr Freq Control. 2023 Jul;70(7):587-599. doi: 10.1109/TUFFC.2023.3274046 . Epub 2023 Jun 29. PMID: 37155375.","title":"Citation"},{"location":"index.html#disclaimer","text":"This software is provided \"as is\" and it is intended exclusively for research purposes.","title":"Disclaimer"},{"location":"index.html#licensing","text":"BSD 3-Clause License Copyright (c) 2022,2023 Samuel Pichardo All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Licensing"},{"location":"installation.html","text":"Installation and Running Preliminary requirements OS Currently, macOS (ARM64, X64), Windows/Linux (X64) are supported. Windows users can run BabelBrain natively or via WSL2 with NVidia GPUs (see this guide ). GPU BabelBrain supports GPUs enabled via CUDA, OpenCL or Metal. High-end GPUs (8 GPU RAM or more) are recommended. ARM64 processors (M1, M2, M3 families) in Mac systems with 16GB or more RAM are highly recommended. BabelBrain was designed with Mac systems based on Mx processors as primary targets. Note for Intel-based Mac systems Intel-based systems need to have a dedicated AMD GPU (internal or external via Thunderbolt). Intel-based iMac Pro and MacPro systems have internal GPUs suitable for sub 500 kHz simulations (i.e., Vega 56, Vega 64). An external GPU (i.e., AMD W6800 Pro) offers excellent performance and capability for high-frequency simulations. Important note . Before v0.3.4, BabelBrain required having installed Blender for some CSG operations. This is not required anymore for v0.3.4 and up. SimNIBS While BabelBrain does not invoke directly SimNIBS tools, BabelBrain depends on the output generated by SimNIBS 4.x charm processing tools. Consult the Releases section in SimNIBS for installation options. Optional -FSL FSL 's flirt tool is used as a backup method if dealing with imaging datasets that are not 100% orthogonal; ITK often can't handle them and flirt can be used to enforce orthogonal affine matrices. This situation happens rarely, but it comes with the limitation that FSL is only available in macOS and Linux. FSL's init scripts must be activated in the .bash_profile or .zsh_profile. Navigation-planning software While not strictly required, it is highly recommended to use planning software to establish the target localization and orientation, called trajectory in the following through the documentation, of the ultrasound transducer for the simulation of transcranial ultrasound. The trajectory is just a transformation matrix in the T1W space that represents the translation-rotation of a vector describing the target and direction of ultrasound. BabelBrain can import trajectories defined in a proprietary software ( Rogue Research 's Brainsight) or open-source visualization software ( 3DSlicer ). Instructions are detailed in the pipeline section of this documentation. Starting with BabelBrain v0.3.2 and Brainsight v2.5.3, BabelBrain can be directly called from Brainsight, importing simulations automatically once the BabelBrain execution is completed. Standalone application Ready-to-use applications (no need for Python installation) for macOS and Windows are available in the Releases section. Please note that for macOS there are installers for ARM64 (M1 and newer Apple Silicon processors) and Intel X64, so be sure to pick the correct version matching your hardware. For MacOS, open the DMG file and double-click on the package installer. The first time you will use you may be prompted to authorize it to run and access directories. You may also need to authorize it in the Security settings of macOS. For Windows, download the MSI installer file and run to install BabelBrain. Shortcuts will be created in the Desktop and Start menu. Note : CUDA 11.7+ must be installed. Keep a copy of the PlanningModels and Profiles directories. PlanningModels contain STL files useful for the planning of TUS. Profiles contains examples of timings of the TUS exposure (total duration on, duration off, duty cycle). Manual Installation Python 3.9/3.10. Anaconda/miniconda is recommended. - if running in Apple ARM64 processors (M1, M1 Max, etc.), be sure to use a native ARM64 version. Clone the BabelBrain repository. The code can be run in a Python environment; consult examples of conda environment files in the repository. In macOS, a healthy XCode installation with command line tools is needed. For Linux, an LTS Ubuntu installation such as 20.04 with a CUDA installation. For Windows, Visual Studio 2019+ with CUDA 11.7+. Running Standalone application Open BabelBrain from the Applications section in macOS or in Windows from the Start Menu. Manual execution Activate the conda environment, change to the BabelBrain/BabelBrain directory and execute python BabelBrain.py Building standalone application A pyinstaller specification file is provided to build the macOS and Windows applications. In the BabelBrain/BabelBrain directory run pyinstaller BabelBrain.spec --noconfirm A new application will be created at BabelBrain/BabelBrain/dist/","title":"Installation"},{"location":"installation.html#installation-and-running","text":"","title":"Installation and Running"},{"location":"installation.html#preliminary-requirements","text":"","title":"Preliminary requirements"},{"location":"installation.html#os","text":"Currently, macOS (ARM64, X64), Windows/Linux (X64) are supported. Windows users can run BabelBrain natively or via WSL2 with NVidia GPUs (see this guide ).","title":"OS"},{"location":"installation.html#gpu","text":"BabelBrain supports GPUs enabled via CUDA, OpenCL or Metal. High-end GPUs (8 GPU RAM or more) are recommended. ARM64 processors (M1, M2, M3 families) in Mac systems with 16GB or more RAM are highly recommended. BabelBrain was designed with Mac systems based on Mx processors as primary targets.","title":"GPU"},{"location":"installation.html#note-for-intel-based-mac-systems","text":"Intel-based systems need to have a dedicated AMD GPU (internal or external via Thunderbolt). Intel-based iMac Pro and MacPro systems have internal GPUs suitable for sub 500 kHz simulations (i.e., Vega 56, Vega 64). An external GPU (i.e., AMD W6800 Pro) offers excellent performance and capability for high-frequency simulations. Important note . Before v0.3.4, BabelBrain required having installed Blender for some CSG operations. This is not required anymore for v0.3.4 and up.","title":"Note for Intel-based Mac systems"},{"location":"installation.html#simnibs","text":"While BabelBrain does not invoke directly SimNIBS tools, BabelBrain depends on the output generated by SimNIBS 4.x charm processing tools. Consult the Releases section in SimNIBS for installation options.","title":"SimNIBS"},{"location":"installation.html#optional-fsl","text":"FSL 's flirt tool is used as a backup method if dealing with imaging datasets that are not 100% orthogonal; ITK often can't handle them and flirt can be used to enforce orthogonal affine matrices. This situation happens rarely, but it comes with the limitation that FSL is only available in macOS and Linux. FSL's init scripts must be activated in the .bash_profile or .zsh_profile.","title":"Optional -FSL"},{"location":"installation.html#navigation-planning-software","text":"While not strictly required, it is highly recommended to use planning software to establish the target localization and orientation, called trajectory in the following through the documentation, of the ultrasound transducer for the simulation of transcranial ultrasound. The trajectory is just a transformation matrix in the T1W space that represents the translation-rotation of a vector describing the target and direction of ultrasound. BabelBrain can import trajectories defined in a proprietary software ( Rogue Research 's Brainsight) or open-source visualization software ( 3DSlicer ). Instructions are detailed in the pipeline section of this documentation. Starting with BabelBrain v0.3.2 and Brainsight v2.5.3, BabelBrain can be directly called from Brainsight, importing simulations automatically once the BabelBrain execution is completed.","title":"Navigation-planning software"},{"location":"installation.html#standalone-application","text":"Ready-to-use applications (no need for Python installation) for macOS and Windows are available in the Releases section. Please note that for macOS there are installers for ARM64 (M1 and newer Apple Silicon processors) and Intel X64, so be sure to pick the correct version matching your hardware. For MacOS, open the DMG file and double-click on the package installer. The first time you will use you may be prompted to authorize it to run and access directories. You may also need to authorize it in the Security settings of macOS. For Windows, download the MSI installer file and run to install BabelBrain. Shortcuts will be created in the Desktop and Start menu. Note : CUDA 11.7+ must be installed. Keep a copy of the PlanningModels and Profiles directories. PlanningModels contain STL files useful for the planning of TUS. Profiles contains examples of timings of the TUS exposure (total duration on, duration off, duty cycle).","title":"Standalone application"},{"location":"installation.html#manual-installation","text":"Python 3.9/3.10. Anaconda/miniconda is recommended. - if running in Apple ARM64 processors (M1, M1 Max, etc.), be sure to use a native ARM64 version. Clone the BabelBrain repository. The code can be run in a Python environment; consult examples of conda environment files in the repository. In macOS, a healthy XCode installation with command line tools is needed. For Linux, an LTS Ubuntu installation such as 20.04 with a CUDA installation. For Windows, Visual Studio 2019+ with CUDA 11.7+.","title":"Manual Installation"},{"location":"installation.html#running","text":"","title":"Running"},{"location":"installation.html#standalone-application_1","text":"Open BabelBrain from the Applications section in macOS or in Windows from the Start Menu.","title":"Standalone application"},{"location":"installation.html#manual-execution","text":"Activate the conda environment, change to the BabelBrain/BabelBrain directory and execute python BabelBrain.py","title":"Manual execution"},{"location":"installation.html#building-standalone-application","text":"A pyinstaller specification file is provided to build the macOS and Windows applications. In the BabelBrain/BabelBrain directory run pyinstaller BabelBrain.spec --noconfirm A new application will be created at BabelBrain/BabelBrain/dist/","title":"Building standalone application"},{"location":"Advanced/advanced.html","text":"Advanced features Since release 0.3.5, BabelBrain includes a menu for advanced options controlling low-level details in BabelBrain. If any of these options are modified, they will remain persistent on the next BabelBrain sessions. Select Reset to defaults to restore original values. Domain Generation Elastix co-registration Optimizer The default optimizer for Elastix, AdaptiveStochasticGradientDescent, works almost for every combination of CT->T1W and ZTE/PETRA->T1W. However, as much more testing has started to accumulate, we noticed that the CT->T1W was not working in some cases. We tested different options in Elastix, and the FiniteDifferenceGradientDescent and QuasiNewtonLBFGS seem to work well as a replacement. If the coregistration from CT to T1W is not working as expected, try one of these two other options. FiniteDifferenceGradientDescent seems to work better. Proportion of trabecular bone By default, the percentage of trabecular is 80% using the line of sight of the trajectory. If the trajectory crosses very thin regions like the parietal bone, there may be a chance all region is considered trabecular, which may not be desired. A warning message will be printed out in the terminal output in that case. In such cases as the parietal bone, consider reducing a lower value of trabecular, such as 0.1 or 0.2. Force using Blender for Constructive Solid Geometry While pycork seems to do a great replacement, we identified that in some instances when using the subvolume feature there was a crash in the low pycork library. Forcing using Blender instead can help to run those special cases. Manual Subvolume This feature is intended to give a bit more control for scenarios where the trajectory is regions where the skin mask may cause some issues, especially in targets near the back of the head. For most targets, there is no need to make any adjustments, but we have spotted a few cases (i.e., EEG-P7 location) in which the skin mask of the back of the head was pushing the whole domain and causing issues to place correctly the transducer. For these scenarios, adjusting a subvolume to extract for the simulations can mitigate these issues. This can also help to reduce image size for high-resolution cases. Invert ZTE In GE scanners, the oZTEo produces inverted MR images and can't be disabled. While we recommend using 3dRadial-based sequences for ZTE scans, 3dRadial may not be available in all scanners. If oZTEo is used, please activate this new option, otherwise an error will occur during the processing. PETRA conversion The number of bins (default of 2) and minimal distance of bins (default to 50) are now configurable. This helps to match the functionality of the UCL's petra-to-ct tool. Adjust this if the PETRA conversion is not selecting correctly the bone region. There is also an option to create the histogram as done in the UCL's tool. Transcranial Ultrasound CTX-500 Correction Starting R0.4.0, BabelBrain introduced a parabollic correction to the Rayleigh's integral-based modeling of the CTX-500 transducer. This small correction ensures that the TPO setting (center of FLHM focal spot at -3dB) matches better how the experimental unit operates. There are two options: Original and July 2024 . The Original setting matches how the CTX-500 unit was modelled in previous releases (<= 0.3.5) and July 2024 has the new correction. Please note that the correction is only a couple mm when focusing at the deepest target. The newer CTX 250 and CTX 500 transducers (introduced in R0.4.0) have already this correction by default.","title":"Advanced options"},{"location":"Advanced/advanced.html#advanced-features","text":"Since release 0.3.5, BabelBrain includes a menu for advanced options controlling low-level details in BabelBrain. If any of these options are modified, they will remain persistent on the next BabelBrain sessions. Select Reset to defaults to restore original values.","title":"Advanced features"},{"location":"Advanced/advanced.html#domain-generation","text":"","title":"Domain Generation"},{"location":"Advanced/advanced.html#elastix-co-registration-optimizer","text":"The default optimizer for Elastix, AdaptiveStochasticGradientDescent, works almost for every combination of CT->T1W and ZTE/PETRA->T1W. However, as much more testing has started to accumulate, we noticed that the CT->T1W was not working in some cases. We tested different options in Elastix, and the FiniteDifferenceGradientDescent and QuasiNewtonLBFGS seem to work well as a replacement. If the coregistration from CT to T1W is not working as expected, try one of these two other options. FiniteDifferenceGradientDescent seems to work better.","title":"Elastix co-registration Optimizer"},{"location":"Advanced/advanced.html#proportion-of-trabecular-bone","text":"By default, the percentage of trabecular is 80% using the line of sight of the trajectory. If the trajectory crosses very thin regions like the parietal bone, there may be a chance all region is considered trabecular, which may not be desired. A warning message will be printed out in the terminal output in that case. In such cases as the parietal bone, consider reducing a lower value of trabecular, such as 0.1 or 0.2.","title":"Proportion of trabecular bone"},{"location":"Advanced/advanced.html#force-using-blender-for-constructive-solid-geometry","text":"While pycork seems to do a great replacement, we identified that in some instances when using the subvolume feature there was a crash in the low pycork library. Forcing using Blender instead can help to run those special cases.","title":"Force using Blender for Constructive Solid Geometry"},{"location":"Advanced/advanced.html#manual-subvolume","text":"This feature is intended to give a bit more control for scenarios where the trajectory is regions where the skin mask may cause some issues, especially in targets near the back of the head. For most targets, there is no need to make any adjustments, but we have spotted a few cases (i.e., EEG-P7 location) in which the skin mask of the back of the head was pushing the whole domain and causing issues to place correctly the transducer. For these scenarios, adjusting a subvolume to extract for the simulations can mitigate these issues. This can also help to reduce image size for high-resolution cases.","title":"Manual Subvolume"},{"location":"Advanced/advanced.html#invert-zte","text":"In GE scanners, the oZTEo produces inverted MR images and can't be disabled. While we recommend using 3dRadial-based sequences for ZTE scans, 3dRadial may not be available in all scanners. If oZTEo is used, please activate this new option, otherwise an error will occur during the processing.","title":"Invert ZTE"},{"location":"Advanced/advanced.html#petra-conversion","text":"The number of bins (default of 2) and minimal distance of bins (default to 50) are now configurable. This helps to match the functionality of the UCL's petra-to-ct tool. Adjust this if the PETRA conversion is not selecting correctly the bone region. There is also an option to create the histogram as done in the UCL's tool.","title":"PETRA conversion"},{"location":"Advanced/advanced.html#transcranial-ultrasound","text":"","title":"Transcranial Ultrasound"},{"location":"Advanced/advanced.html#ctx-500-correction","text":"Starting R0.4.0, BabelBrain introduced a parabollic correction to the Rayleigh's integral-based modeling of the CTX-500 transducer. This small correction ensures that the TPO setting (center of FLHM focal spot at -3dB) matches better how the experimental unit operates. There are two options: Original and July 2024 . The Original setting matches how the CTX-500 unit was modelled in previous releases (<= 0.3.5) and July 2024 has the new correction. Please note that the correction is only a couple mm when focusing at the deepest target. The newer CTX 250 and CTX 500 transducers (introduced in R0.4.0) have already this correction by default.","title":"CTX-500 Correction"},{"location":"Appendix/Appendix.html","text":"Appendix - Tissue properties Please consult the manuscript for details on the underlying models, material properties and methodology followed in selecting them.","title":"Appendix"},{"location":"Appendix/Appendix.html#appendix-tissue-properties","text":"Please consult the manuscript for details on the underlying models, material properties and methodology followed in selecting them.","title":"Appendix - Tissue properties"},{"location":"MRISequences/MRISequences.html","text":"MRI Sequences Basics The T1W sequence must be 1-mm isotropic . Otherwise, some parts of the processing may fail. Overall, it is highly recommended that all MRI sequences used in the planning with BabelBrain to be 1-mm isotropic, ZTE for GE Scanners There are two variants of the ZTE sequences that are emerging with GE scanners: 3dradial and oZTE . Both are technically equivalent, but they are postprocessed by the GE console differently. The recommended sequence is 3dradial (as this is one we have much more experience in UCalgary) as oZTEo is still under exploration. However, not every site will have access to all sequences. 3dradial The recommended ZTE sequence is derived from a 3dradial GE PSD, with saggital orientation, reconstruction matrix of 256x256, receiver bandwidth of 62.5 kHz (pixel bandwith of 244 Hz), NEX=3.5, with chemical shift correction enabled, and using SCENIC intensity correction (PURE is also acceptable). The exported settings are available in <a href=\"GE_Protocol.pdf\" target=\"_blank\"GE_Protocol.pdf and in the protocol GE_protocol.tar file. While the protocol file is the most rigorous approach to reproduce the sequence, please note the protocol file is not backwards compatible with GE DV versions of the console. Be sure of reaching your local GE Clinical Scientist to assist if using the protocol file. VERY IMPORTANT : The number of slabs and slice resolution are not exported in the parameters. Please use Slices per slab = 184 , and match the same for the T1W and T2W scans. Use Slice Resolution = 100% , to keep the acquisition 1mm isotropic Below there are screnshots of the console showing how the sequence should appear oZTEo The exported settings are available in GE_oZTEo_Protocol.pdf . The oZTEo sequence inverts the MRI signal by default, so it is important to activate the advanced option Invert ZTE , otherwise it will produce a crash in BabelBrain. PETRA for Siemens Scanners IMPORTANT NOTE . We are seeing some sites obtaining pseudo CTs with too high HU values using this PETRA sequence. We are still investigating for a fix. Please let us know if you are experiencing this issue. We recommend using the EXAR1 file available at the UCL's PETRA-TO-CT Github repository . A local copy is also provided for convenience.","title":"MRI sequences"},{"location":"MRISequences/MRISequences.html#mri-sequences","text":"","title":"MRI Sequences"},{"location":"MRISequences/MRISequences.html#basics","text":"The T1W sequence must be 1-mm isotropic . Otherwise, some parts of the processing may fail. Overall, it is highly recommended that all MRI sequences used in the planning with BabelBrain to be 1-mm isotropic,","title":"Basics"},{"location":"MRISequences/MRISequences.html#zte-for-ge-scanners","text":"There are two variants of the ZTE sequences that are emerging with GE scanners: 3dradial and oZTE . Both are technically equivalent, but they are postprocessed by the GE console differently. The recommended sequence is 3dradial (as this is one we have much more experience in UCalgary) as oZTEo is still under exploration. However, not every site will have access to all sequences.","title":"ZTE for GE Scanners"},{"location":"MRISequences/MRISequences.html#3dradial","text":"The recommended ZTE sequence is derived from a 3dradial GE PSD, with saggital orientation, reconstruction matrix of 256x256, receiver bandwidth of 62.5 kHz (pixel bandwith of 244 Hz), NEX=3.5, with chemical shift correction enabled, and using SCENIC intensity correction (PURE is also acceptable). The exported settings are available in <a href=\"GE_Protocol.pdf\" target=\"_blank\"GE_Protocol.pdf and in the protocol GE_protocol.tar file. While the protocol file is the most rigorous approach to reproduce the sequence, please note the protocol file is not backwards compatible with GE DV versions of the console. Be sure of reaching your local GE Clinical Scientist to assist if using the protocol file. VERY IMPORTANT : The number of slabs and slice resolution are not exported in the parameters. Please use Slices per slab = 184 , and match the same for the T1W and T2W scans. Use Slice Resolution = 100% , to keep the acquisition 1mm isotropic Below there are screnshots of the console showing how the sequence should appear","title":"3dradial"},{"location":"MRISequences/MRISequences.html#ozteo","text":"The exported settings are available in GE_oZTEo_Protocol.pdf . The oZTEo sequence inverts the MRI signal by default, so it is important to activate the advanced option Invert ZTE , otherwise it will produce a crash in BabelBrain.","title":"oZTEo"},{"location":"MRISequences/MRISequences.html#petra-for-siemens-scanners","text":"IMPORTANT NOTE . We are seeing some sites obtaining pseudo CTs with too high HU values using this PETRA sequence. We are still investigating for a fix. Please let us know if you are experiencing this issue. We recommend using the EXAR1 file available at the UCL's PETRA-TO-CT Github repository . A local copy is also provided for convenience.","title":"PETRA for Siemens Scanners"},{"location":"pipeline/BabelBrain.html","text":"BabelBrain Simulation Now that planning is done, you can open BabelBrain. If using a version of Brainsight previous to 2.5.3 : Open BabelBrain either from the Applications menu in macOS if the DMG installer was used, from the Start menu if in Windows or with python BabelBrain.py if using the manual installation. If using Brainsight version 2.5.3 and up : In the lower-left corner of Brainsight's target UI, there is a simulation panel. Specify first an output directory to save the results, then click on the \"FUS\" button and the BabelBrain GUI will open. Input data An input dialog will prompt the different input files required for the simulation. If running directly from BrainSight, some of these fields (marked below with an \"*\") will be pre-populated. Specify the path to the trajectory file and the source (Slicer or Brainsight) (*). Select the SimNIBS output directory associated with this test and indicate what tool was used to generate it ( headreco or charm ) (*) Select the path to the T1W Nifti file (*) Indicate if CT scan is available. Options are \"No\", \"real CT\" or \"ZTE\". Select if coregistration of CT to T1W space must be performed. Depending on your specific preliminary steps, you may have CT already coregistered in T1W space. If coregistration is done by BabelBrain, the resolution of the CT will be preserved. The T1W file will be first bias-corrected and upscaled to the CT resolution and then the CT will be coregistered using the itk-elastix package with rigid coregistration. Select the CT mapping profile that matches the better the CT scanner. Consult papers by Webb et al. about speed of sound and attenuation as a function of CT scanning conditions. For most practical scenarios, if using GE, the most common scanner combination will GE, 120, B,, 0.5, 0.6 . For Siemens scanners, it will be Siemens,120,B,,0.4, 0.5 . When selecting ZTE or PETRA scans, the best CT combination will be selected automatically. Select a thermal profile file for simulation. This is a simple YAML file where the timings of transcranial ultrasound are specified. For example: BaseIsppa: 5.0 # W/cm2 AllDC_PRF_Duration: #All combinations of timing that will be considered - DC: 0.3 PRF: 10.0 Duration: 40.0 DurationOff: 40.0 This definition helps in the step of thermal simulation with BabelBrain. BaseIsspa is the reference value of acoustic intensity for which the thermal equation will be solved. You can set this to 5 W/cm ^2 ^2 . Choices for other powers will be scaled (no recalculations) based on this value. For scenarios where repeated exposures is required, the extra field Repetitions can be added. For example: BaseIsppa: 5.0 # W/cm2 AllDC_PRF_Duration: #All combinations of timing that will be considered - DC: 0.3 PRF: 10.0 Duration: 30.0 DurationOff: 30.0 Repetitions: 10 In the previous case, the simulation will run for an exposure lasting 10 min, where ultrasound is turned on for 30s, followed by 30s with ultrasound off, and repeated 10 times. More than one exposure can be specified. For example: BaseIsppa: 5.0 # W/cm2 AllDC_PRF_Duration: #All combinations of timing that will be considered - DC: 0.3 PRF: 10.0 Duration: 40.0 DurationOff: 40.0 - DC: 0.1 PRF: 5.0 Duration: 80.0 DurationOff: 50.0 When running the thermal simulation step, all the combinations specified in the thermal profile will be calculated. Select the type of transducer to be used in simulations. Optional. Select a multi-point profile file for simulations. BabelBrain offers the possibility to execute electronic steering over a list of points if a concave array is selected. If any of the three concave arrays is selected (H317, I12378 and ATAC), the user can select a profile definition specific to multi-point steering. This is a simple YAML file where the timings of transcranial ultrasound are specified. For example: MultiPoint: - X: 2.0 Y: 0.0 Z: 0.0 - X: -1.0 Y: 1.73205081 Z: 0.0 - X: -1.0 Y: -1.73205081 Z: 0.0 In this example, we create a 3-point steering list that makes a 3-point star with a radius from the origin of 2 mm. Once all inputs are set, then click on \"CONTINUE\" STEP 1 - Domain generation The diagram below shows flowchart describing the process for the domain generation. The first step after specifying input data is to create the simulation domain. The available operating frequencies will depend on the selected transducer. The second main input is the resolution of the simulation expressed in the number of points per wavelength (PPW). The minimum for fast estimation is 6 PPW, and 9 PPW to meet criteria de convergence when compared to other numerical tools . Depending on if CT or ZTE scans are available, options to fine-tune the domain generation will be available. For CT scans, the user can adjust the threshold for bone detection (set by default to 300 HU). For ZTE scans the user can specify the thresholds to select normalized ZTE signal (by default 0.1 and 0.6) to convert to pseudo-CT. Please consult Miscouridou et al. for details on the \"classical\" approach to convert from ZTE to pseudo-CT. The execution time in M1 Max processor can take from 1 minute of minutes up to 10 minutes depending on the resolution and availability of ZTE/CT scans. When initiating the calculations, a detailed log output will appear in the bottom region of the window. In case of any error during processing, a dialog message will prompt indicating to consult this window for more details. Once executed, orthogonal views of the domain will be shown. T1W scan is also shown to verify that the mask was correctly calculated. Once executed, a Nifti file containing the mask describing the different tissue regions will be produced in the directory where the T1W Nifit file is located. It will have a file with the following structure: <Name of target file>_<Frequency>_<PPW>_BabelViscoInput.nii.gz , for example LinearTransform_500kHz_6PPW_BabelViscoInput.nii.gz . The mask will be in T1W space, facilitating its inspection as overlay with T1W data. The mask has values of 1 for skin, 2 for cortical bone, 3 for trabecular and 4 for brain tissue. A single voxel with a value of 5 indicates the location of the target. The raw data inside the Nifti file is organized in a 3D Cartesian volume that is aligned to the transducer acoustic axis. The Nifti affine matrix ensures the mask can be inspected in T1W space. If a CT or ZTE dataset is indicated as input, the skull mask will be created using this scan rather than the output of headreco or charm . Also, an overlay of the CT/pseudo-CT will be also shown for verification purposes. If the co-registration is not correct enough, you can adjust the Elastix co-registration option in the advanced menu . Please note if a <Name of target file>_<Frequency>_<PPW>_BabelViscoInput.nii.gz file exists, the GUI will ask confirmation to recalculate the mask. Selecting \"No\" will load the previous mask. STL files are produced from the file final_tissues.nii.gz created by charm. Meshes are created and smoothed (Laplace filtering), and the mask for simulation is calculated via GPU-accelerated voxelization. The STL files of skin, csf and bone will be saved in the output directory of SimNIBS by BabelBrain. STEP 2 - Transcranial ultrasound simulation The second tab in the GUI of BabelBrain shows the ultrasound simulation step. The diagram below shows a flowchart of this step. The choices of this tab will depend on the selected transducer. Simulation results in this step are shown in normalized conditions. The final step (see below) later will show the results denormalized in function of the selected intensity at the target. Common features to all transducers After running a simulation in Step 2, the results window will show two orthogonal views of normalized acoustic intensity. The intensity in the skin and skull regions is masked out (it can be visualized later in those regions in step 3). In this step, the main goal is to ensure a correct spatial focusing on the target. Depending on the capabilities of the transducer, this will imply for the most doing a combination of mechanical corrections and (if available) use of steering capabilities. The common features to all transducers are highlighted by the red box in the figure below Distance of the maximal depth This distance is set a default value of 40 mm and controls how deep the simulation domain extends beyond the focal point. For many targets and transducers, 40 mm is more than enough. But for devices producing large focal spots, it may be necessary to extend this value. This is particular important if the far field region gets too close to bony structures as this can help to model potential reflections. Mechanical corrections All transducers show an action to perform mechanical corrections that mimic moving the transducer in the X, Y, and Z directions to make sure the focal spot is well centred at the target. Corrections on X and Y mimic moving the transducer along the scalp. Use these corrections to compensate refraction effects that may push laterally a focal spot. Corrections on Z, which appear in the GUI for most transducers as Distance Tx outplane to skin mimic placing some distance between the scalp and the transducer; for example, when using a gel pad. After running a first pass of simulations in Step 2, a button action Calculate Mechanical Adjustments is available to calculate the distance from the target to the center of mass of the focal spot at -3dB and suggest applying the required mechanical corrections in X and Y directions. This action should help to minimize the number of iterations in simulations looking to ensure the focal spot is aligned in the X and Y directions to the intended target. The GUI shows a label with the \"Distance target to FLHM center [X, Y, Z] (mm)\" that helps to perform adjustments with mechanical and steering corrections. Please note that in the simulation domain, X, Y and Z are not mapped to subject coordinates directly in the GUI. However, at the end of the simulations in Step 3, there will be a report in which direction in the T1W space this adjustment translates. Also, as noted below, the modified trajectory will be saved automatically. Modified trajectory - VERY IMPORTANT Every time a simulation in Step 2 is run, Babelbrain saves automatically the corrected trajectory in the same directory where the input trajectory is located. A _mod suffix will be added to the file; for example, if the input file was R_Vim.txt , the modified trajectory will be called R_Vim-mod.txt . This trajectory is the one that is recommended to be used in neuronavigation when performing the real experiment. This trajectory will help to place the transducer in the position that helps to compensate for the skull refraction effects. When running in tandem with Brainsight, this trajectory will be loaded automatically along with the results as shown below Transducers CTX_250, CTX_500 and DPX_500 For the CTX_250, CTX_500 and DPX_500 transducers, the initial assumption is that this type of transducer will be placed in direct contact with the skin and that the focusing distance will be adjusted according to the desired target. The initial \"TPO Distance\" (an adjustable parameter in the TPO NeuroFUS device) is calculated based on the distance skin to the target. It is recommended to simulate with the default values to evaluate the degree of focus shift caused by the skull. Adjust both mechanical corrections as described above and combined with the TPO Distance to ensure your target is correctly engaged. H246 The H246 transducer has a similar operation as the CTX_500. The steps presented above apply similarly. As the H246 transducer has a much longer focal length, consider extending the maximal depth of simulations. H317, I12378 and ATAC These transducers assume that a coupling cone is in contact with the skin. The user interface shows small differences compared to CTX_500 and H246. There is a parameter for the Distance cone to Focus that depends on the acoustic cone used for coupling. Because these transducers are phased arrays, the user interface shows also the option to perform electronic refocusing and multifocus. Single The \"Single\" transducer is a generic device with a configurable diameter and focal length. Because this is a more general-purpose device, it is not assumed that the transducer is in direct contact with the skin. The transducer is always initially centered at the target, which means that there could be some space between the transducer out plane and the skin. The user can adjust the mechanical distance on the Z axis until the point of the out plane of the transducer reaches the skin. BSonix These are commercial transducers with fixed focal lengths as reported in Schafer et al. . The user can select focal length of 35, 55, 65 and 80 mm. Similar to the CTX_500, it is assumed the device is in direct contact with the skin, with the option to move the transducer away from the skin to simulate placing a coupling pad. REMOPD This transducer is a flat device that shows features that combine functionalities similar to the H246 and phased arrays. STEP 3 - Thermal simulation The third tab in the GUI of BabelBrain shows the thermal simulation step. The diagram below shows a flowchart of this step. The thermal simulation solves the Bio-heat thermal equation (BHTE) for all the combinations of duty cycle, timing and ultrasound exposure indicated in the thermal profile definition file. The selection of spatial-peak pulse-average intensity ( I_{\\text{SPPA}} I_{\\text{SPPA}} ) indicates the desired intensity at the target. The spatial-peak time-average intensity ( I_{\\text{SPTA}} I_{\\text{SPTA}} ) is calculated based on the selected timing conditions. Based on the selections of timing and desired I_{\\text{SPPA}} I_{\\text{SPPA}} in tissue, the I_{\\text{SPPA}} I_{\\text{SPPA}} in water conditions is calculated after taking into account all the losses. Thermal safety parameters (maximal temperature and thermal doses) in the skin, skull bone and brain tissue are calculated at the locations showing the highest temperature elevation in the whole 3D volume. The MTB , MTS and MTC push buttons in the lower region of the interface select the slice corresponding to the maximal temperature in brain, skin and skull, respectively. The Update Profile and Calculate action can be used to load an updated version of the thermal profile file. This will force the recalculation of thermal results. The Show dropdown menu can be used to select the 2D intensity and thermal Maps or Profiles that shows the temporal evolution of temperature at the target and locations of maximal temperature at skin, skull and brain tissue. The Export summary (CSV) action exports the input data paths and user selections used for the simulations. It also includes a table of I_{\\text{SPPA}} I_{\\text{SPPA}} in water conditions and safety metrics in function of the desired I_{\\text{SPPA}} I_{\\text{SPPA}} in tissue. Below there is an example of the exported data. Isppa IsppaWater MI Ispta MTB MTS MTC CEMBrain CEMSkin CEMSkull 0.5 2.38 0.18 0.15 0.03 0.01 0.02 0.00033419 0.000329626 0.00033046 1 4.77 0.25 0.3 0.07 0.03 0.04 0.000343142 0.000333787 0.000335482 1.5 7.15 0.31 0.45 0.10 0.04 0.05 0.000352388 0.000338007 0.000340589 2 9.54 0.35 0.6 0.13 0.06 0.07 0.00036194 0.000342286 0.000345782 2.5 11.92 0.39 0.75 0.17 0.07 0.09 0.000371807 0.000346625 0.000351062 3 14.31 0.43 0.9 0.20 0.09 0.11 0.000382002 0.000351024 0.000356431 ... ... ... ... ... ... ... ... ... ... The Export maps (.nii.gz) action exports the thermal, pressure and intensity fields in Nifti format based on the selected Isppa at target. This can be used for inspection in neuronavigation and visualization software","title":"BabelBrain simulation"},{"location":"pipeline/BabelBrain.html#babelbrain-simulation","text":"Now that planning is done, you can open BabelBrain. If using a version of Brainsight previous to 2.5.3 : Open BabelBrain either from the Applications menu in macOS if the DMG installer was used, from the Start menu if in Windows or with python BabelBrain.py if using the manual installation. If using Brainsight version 2.5.3 and up : In the lower-left corner of Brainsight's target UI, there is a simulation panel. Specify first an output directory to save the results, then click on the \"FUS\" button and the BabelBrain GUI will open.","title":"BabelBrain Simulation"},{"location":"pipeline/BabelBrain.html#input-data","text":"An input dialog will prompt the different input files required for the simulation. If running directly from BrainSight, some of these fields (marked below with an \"*\") will be pre-populated. Specify the path to the trajectory file and the source (Slicer or Brainsight) (*). Select the SimNIBS output directory associated with this test and indicate what tool was used to generate it ( headreco or charm ) (*) Select the path to the T1W Nifti file (*) Indicate if CT scan is available. Options are \"No\", \"real CT\" or \"ZTE\". Select if coregistration of CT to T1W space must be performed. Depending on your specific preliminary steps, you may have CT already coregistered in T1W space. If coregistration is done by BabelBrain, the resolution of the CT will be preserved. The T1W file will be first bias-corrected and upscaled to the CT resolution and then the CT will be coregistered using the itk-elastix package with rigid coregistration. Select the CT mapping profile that matches the better the CT scanner. Consult papers by Webb et al. about speed of sound and attenuation as a function of CT scanning conditions. For most practical scenarios, if using GE, the most common scanner combination will GE, 120, B,, 0.5, 0.6 . For Siemens scanners, it will be Siemens,120,B,,0.4, 0.5 . When selecting ZTE or PETRA scans, the best CT combination will be selected automatically. Select a thermal profile file for simulation. This is a simple YAML file where the timings of transcranial ultrasound are specified. For example: BaseIsppa: 5.0 # W/cm2 AllDC_PRF_Duration: #All combinations of timing that will be considered - DC: 0.3 PRF: 10.0 Duration: 40.0 DurationOff: 40.0 This definition helps in the step of thermal simulation with BabelBrain. BaseIsspa is the reference value of acoustic intensity for which the thermal equation will be solved. You can set this to 5 W/cm ^2 ^2 . Choices for other powers will be scaled (no recalculations) based on this value. For scenarios where repeated exposures is required, the extra field Repetitions can be added. For example: BaseIsppa: 5.0 # W/cm2 AllDC_PRF_Duration: #All combinations of timing that will be considered - DC: 0.3 PRF: 10.0 Duration: 30.0 DurationOff: 30.0 Repetitions: 10 In the previous case, the simulation will run for an exposure lasting 10 min, where ultrasound is turned on for 30s, followed by 30s with ultrasound off, and repeated 10 times. More than one exposure can be specified. For example: BaseIsppa: 5.0 # W/cm2 AllDC_PRF_Duration: #All combinations of timing that will be considered - DC: 0.3 PRF: 10.0 Duration: 40.0 DurationOff: 40.0 - DC: 0.1 PRF: 5.0 Duration: 80.0 DurationOff: 50.0 When running the thermal simulation step, all the combinations specified in the thermal profile will be calculated. Select the type of transducer to be used in simulations. Optional. Select a multi-point profile file for simulations. BabelBrain offers the possibility to execute electronic steering over a list of points if a concave array is selected. If any of the three concave arrays is selected (H317, I12378 and ATAC), the user can select a profile definition specific to multi-point steering. This is a simple YAML file where the timings of transcranial ultrasound are specified. For example: MultiPoint: - X: 2.0 Y: 0.0 Z: 0.0 - X: -1.0 Y: 1.73205081 Z: 0.0 - X: -1.0 Y: -1.73205081 Z: 0.0 In this example, we create a 3-point steering list that makes a 3-point star with a radius from the origin of 2 mm. Once all inputs are set, then click on \"CONTINUE\"","title":"Input data"},{"location":"pipeline/BabelBrain.html#step-1-domain-generation","text":"The diagram below shows flowchart describing the process for the domain generation. The first step after specifying input data is to create the simulation domain. The available operating frequencies will depend on the selected transducer. The second main input is the resolution of the simulation expressed in the number of points per wavelength (PPW). The minimum for fast estimation is 6 PPW, and 9 PPW to meet criteria de convergence when compared to other numerical tools . Depending on if CT or ZTE scans are available, options to fine-tune the domain generation will be available. For CT scans, the user can adjust the threshold for bone detection (set by default to 300 HU). For ZTE scans the user can specify the thresholds to select normalized ZTE signal (by default 0.1 and 0.6) to convert to pseudo-CT. Please consult Miscouridou et al. for details on the \"classical\" approach to convert from ZTE to pseudo-CT. The execution time in M1 Max processor can take from 1 minute of minutes up to 10 minutes depending on the resolution and availability of ZTE/CT scans. When initiating the calculations, a detailed log output will appear in the bottom region of the window. In case of any error during processing, a dialog message will prompt indicating to consult this window for more details. Once executed, orthogonal views of the domain will be shown. T1W scan is also shown to verify that the mask was correctly calculated. Once executed, a Nifti file containing the mask describing the different tissue regions will be produced in the directory where the T1W Nifit file is located. It will have a file with the following structure: <Name of target file>_<Frequency>_<PPW>_BabelViscoInput.nii.gz , for example LinearTransform_500kHz_6PPW_BabelViscoInput.nii.gz . The mask will be in T1W space, facilitating its inspection as overlay with T1W data. The mask has values of 1 for skin, 2 for cortical bone, 3 for trabecular and 4 for brain tissue. A single voxel with a value of 5 indicates the location of the target. The raw data inside the Nifti file is organized in a 3D Cartesian volume that is aligned to the transducer acoustic axis. The Nifti affine matrix ensures the mask can be inspected in T1W space. If a CT or ZTE dataset is indicated as input, the skull mask will be created using this scan rather than the output of headreco or charm . Also, an overlay of the CT/pseudo-CT will be also shown for verification purposes. If the co-registration is not correct enough, you can adjust the Elastix co-registration option in the advanced menu . Please note if a <Name of target file>_<Frequency>_<PPW>_BabelViscoInput.nii.gz file exists, the GUI will ask confirmation to recalculate the mask. Selecting \"No\" will load the previous mask. STL files are produced from the file final_tissues.nii.gz created by charm. Meshes are created and smoothed (Laplace filtering), and the mask for simulation is calculated via GPU-accelerated voxelization. The STL files of skin, csf and bone will be saved in the output directory of SimNIBS by BabelBrain.","title":"STEP 1 - Domain generation"},{"location":"pipeline/BabelBrain.html#step-2-transcranial-ultrasound-simulation","text":"The second tab in the GUI of BabelBrain shows the ultrasound simulation step. The diagram below shows a flowchart of this step. The choices of this tab will depend on the selected transducer. Simulation results in this step are shown in normalized conditions. The final step (see below) later will show the results denormalized in function of the selected intensity at the target.","title":"STEP 2 - Transcranial ultrasound simulation"},{"location":"pipeline/BabelBrain.html#common-features-to-all-transducers","text":"After running a simulation in Step 2, the results window will show two orthogonal views of normalized acoustic intensity. The intensity in the skin and skull regions is masked out (it can be visualized later in those regions in step 3). In this step, the main goal is to ensure a correct spatial focusing on the target. Depending on the capabilities of the transducer, this will imply for the most doing a combination of mechanical corrections and (if available) use of steering capabilities. The common features to all transducers are highlighted by the red box in the figure below","title":"Common features to all transducers"},{"location":"pipeline/BabelBrain.html#distance-of-the-maximal-depth","text":"This distance is set a default value of 40 mm and controls how deep the simulation domain extends beyond the focal point. For many targets and transducers, 40 mm is more than enough. But for devices producing large focal spots, it may be necessary to extend this value. This is particular important if the far field region gets too close to bony structures as this can help to model potential reflections.","title":"Distance of the maximal depth"},{"location":"pipeline/BabelBrain.html#mechanical-corrections","text":"All transducers show an action to perform mechanical corrections that mimic moving the transducer in the X, Y, and Z directions to make sure the focal spot is well centred at the target. Corrections on X and Y mimic moving the transducer along the scalp. Use these corrections to compensate refraction effects that may push laterally a focal spot. Corrections on Z, which appear in the GUI for most transducers as Distance Tx outplane to skin mimic placing some distance between the scalp and the transducer; for example, when using a gel pad. After running a first pass of simulations in Step 2, a button action Calculate Mechanical Adjustments is available to calculate the distance from the target to the center of mass of the focal spot at -3dB and suggest applying the required mechanical corrections in X and Y directions. This action should help to minimize the number of iterations in simulations looking to ensure the focal spot is aligned in the X and Y directions to the intended target. The GUI shows a label with the \"Distance target to FLHM center [X, Y, Z] (mm)\" that helps to perform adjustments with mechanical and steering corrections. Please note that in the simulation domain, X, Y and Z are not mapped to subject coordinates directly in the GUI. However, at the end of the simulations in Step 3, there will be a report in which direction in the T1W space this adjustment translates. Also, as noted below, the modified trajectory will be saved automatically.","title":"Mechanical corrections"},{"location":"pipeline/BabelBrain.html#modified-trajectory-very-important","text":"Every time a simulation in Step 2 is run, Babelbrain saves automatically the corrected trajectory in the same directory where the input trajectory is located. A _mod suffix will be added to the file; for example, if the input file was R_Vim.txt , the modified trajectory will be called R_Vim-mod.txt . This trajectory is the one that is recommended to be used in neuronavigation when performing the real experiment. This trajectory will help to place the transducer in the position that helps to compensate for the skull refraction effects. When running in tandem with Brainsight, this trajectory will be loaded automatically along with the results as shown below","title":"Modified trajectory - VERY IMPORTANT"},{"location":"pipeline/BabelBrain.html#transducers","text":"","title":"Transducers"},{"location":"pipeline/BabelBrain.html#ctx_250-ctx_500-and-dpx_500","text":"For the CTX_250, CTX_500 and DPX_500 transducers, the initial assumption is that this type of transducer will be placed in direct contact with the skin and that the focusing distance will be adjusted according to the desired target. The initial \"TPO Distance\" (an adjustable parameter in the TPO NeuroFUS device) is calculated based on the distance skin to the target. It is recommended to simulate with the default values to evaluate the degree of focus shift caused by the skull. Adjust both mechanical corrections as described above and combined with the TPO Distance to ensure your target is correctly engaged.","title":"CTX_250, CTX_500 and DPX_500"},{"location":"pipeline/BabelBrain.html#h246","text":"The H246 transducer has a similar operation as the CTX_500. The steps presented above apply similarly. As the H246 transducer has a much longer focal length, consider extending the maximal depth of simulations.","title":"H246"},{"location":"pipeline/BabelBrain.html#h317-i12378-and-atac","text":"These transducers assume that a coupling cone is in contact with the skin. The user interface shows small differences compared to CTX_500 and H246. There is a parameter for the Distance cone to Focus that depends on the acoustic cone used for coupling. Because these transducers are phased arrays, the user interface shows also the option to perform electronic refocusing and multifocus.","title":"H317, I12378 and ATAC"},{"location":"pipeline/BabelBrain.html#single","text":"The \"Single\" transducer is a generic device with a configurable diameter and focal length. Because this is a more general-purpose device, it is not assumed that the transducer is in direct contact with the skin. The transducer is always initially centered at the target, which means that there could be some space between the transducer out plane and the skin. The user can adjust the mechanical distance on the Z axis until the point of the out plane of the transducer reaches the skin.","title":"Single"},{"location":"pipeline/BabelBrain.html#bsonix","text":"These are commercial transducers with fixed focal lengths as reported in Schafer et al. . The user can select focal length of 35, 55, 65 and 80 mm. Similar to the CTX_500, it is assumed the device is in direct contact with the skin, with the option to move the transducer away from the skin to simulate placing a coupling pad.","title":"BSonix"},{"location":"pipeline/BabelBrain.html#remopd","text":"This transducer is a flat device that shows features that combine functionalities similar to the H246 and phased arrays.","title":"REMOPD"},{"location":"pipeline/BabelBrain.html#step-3-thermal-simulation","text":"The third tab in the GUI of BabelBrain shows the thermal simulation step. The diagram below shows a flowchart of this step. The thermal simulation solves the Bio-heat thermal equation (BHTE) for all the combinations of duty cycle, timing and ultrasound exposure indicated in the thermal profile definition file. The selection of spatial-peak pulse-average intensity ( I_{\\text{SPPA}} I_{\\text{SPPA}} ) indicates the desired intensity at the target. The spatial-peak time-average intensity ( I_{\\text{SPTA}} I_{\\text{SPTA}} ) is calculated based on the selected timing conditions. Based on the selections of timing and desired I_{\\text{SPPA}} I_{\\text{SPPA}} in tissue, the I_{\\text{SPPA}} I_{\\text{SPPA}} in water conditions is calculated after taking into account all the losses. Thermal safety parameters (maximal temperature and thermal doses) in the skin, skull bone and brain tissue are calculated at the locations showing the highest temperature elevation in the whole 3D volume. The MTB , MTS and MTC push buttons in the lower region of the interface select the slice corresponding to the maximal temperature in brain, skin and skull, respectively. The Update Profile and Calculate action can be used to load an updated version of the thermal profile file. This will force the recalculation of thermal results. The Show dropdown menu can be used to select the 2D intensity and thermal Maps or Profiles that shows the temporal evolution of temperature at the target and locations of maximal temperature at skin, skull and brain tissue. The Export summary (CSV) action exports the input data paths and user selections used for the simulations. It also includes a table of I_{\\text{SPPA}} I_{\\text{SPPA}} in water conditions and safety metrics in function of the desired I_{\\text{SPPA}} I_{\\text{SPPA}} in tissue. Below there is an example of the exported data. Isppa IsppaWater MI Ispta MTB MTS MTC CEMBrain CEMSkin CEMSkull 0.5 2.38 0.18 0.15 0.03 0.01 0.02 0.00033419 0.000329626 0.00033046 1 4.77 0.25 0.3 0.07 0.03 0.04 0.000343142 0.000333787 0.000335482 1.5 7.15 0.31 0.45 0.10 0.04 0.05 0.000352388 0.000338007 0.000340589 2 9.54 0.35 0.6 0.13 0.06 0.07 0.00036194 0.000342286 0.000345782 2.5 11.92 0.39 0.75 0.17 0.07 0.09 0.000371807 0.000346625 0.000351062 3 14.31 0.43 0.9 0.20 0.09 0.11 0.000382002 0.000351024 0.000356431 ... ... ... ... ... ... ... ... ... ... The Export maps (.nii.gz) action exports the thermal, pressure and intensity fields in Nifti format based on the selected Isppa at target. This can be used for inspection in neuronavigation and visualization software","title":"STEP 3 - Thermal simulation"},{"location":"pipeline/Planning.html","text":"Planning The goal of the planning step is to produce a trajectory that provides the location where ultrasound is intended to be focused and the orientation of the transducer in T1W coordinate space. In practice, the trajectory is just an affine matrix applied to a \"virtual\" needle that describes the location and orientation where focused ultrasound is desired to be concentrated. The tip of the trajectory needs to be at the intended target. The position of the transducer will be relative to the tip location. The details using 3DSlicer can illustrate this. Acoustic path STL helpers BabelBrain includes a series of complementary STL files representing the \"acoustic\" path. Each STL file includes a group of circular meshes combined with a target needle that represent the acoustic cross sections of a field produced with a transducer with F#=1.0 at different depths. As noted in the instructions below, these meshes help to verify a correct alignment with the skin. Planning with 3DSlicer Install the SlicerIGT extension in 3DSlicer (restart 3DSlicer if requested) Load T1W planning data In the IGT extension menu, select \"Create Models\" Load one of the STL helpers as a model with RAS coordinate convention. The model will appear by default centred in the T1W space and pointing in the inferior \\rightarrow \\rightarrow superior direction Alternatively, you can create a needle with a length of 100 mm. Select the model in the data panel and edit the properties to make it appear in the \"Slice Display\" Create a new transform and give it a name related to the target (e.g. LGPI, RSTN, LVIM, RM1, etc.). This is important as BabelBrain will use the name of the transform as a prefix for its output files. Apply the transform to the model and be sure the transformation is set to local (little button next to the \"invert\" button) Select \"Volume Reslice Driver\" in the IGT module menu Select the linear transform in the two first slice views Select one view to be \"Inplane\" and the other to be \"Inplane 90\" In the Data panel, select the linear transform and edit properties, you should be able to see the slice views aligned along the model Adjust the location of the tip of the needle using the translation (LR, PA, IS) controls to match the tip of the model to your area of interest. Adjust the trajectory path using the rotation (LR, PA, IS) controls until finding a trajectory that has a clear path and mimics how the transducer will be placed. Tip: Adjust the trajectory to make it orthogonal to the skin surface in the inline and inline90 views; this recreates the condition of placing a transducer aligned relative to the skin. Note: If you navigate to other windows in 3DSlicer, the transition and rotation control may be set back to 0s. But the transformation matrix will remain with the latest values applied. Any other adjustment will be added to the transformation matrix. Be sure that the local option is always selected. Save the transformation in text format. Select \"Save data\" and select text as the file format. Take note of the path. Suggestion: Select a directory in the same path where T1W or SimNIBS output is located. Planning with Brainsight Alternatively, planning can also be performed with the proprietary software Brainsight made by Rogue Research (Montreal, Canada) for the planning and execution of non-invasive neuromodulation. This software has an existing feature that exports a trajectory that can be used in BabelBrain. The workflow to export a trajectory is very similar to 3DSlicer. Important : Starting with BabelBrain v0.3.2 and Brainsight v2.5.3, BabelBrain can be directly called from Brainsight, importing simulations automatically once the BabelBrain execution is completed. If using Brainsight v2.5.3, create a new \"SimNIBS\" project; If using an older version of Brainsight, create an \"empty\" project. If using \"SimNIBS\" project, it will preload the T1W imaging dataset automatically. Otherwise, load T1W planning data manually. Open target window Adjust coordinates and orientation with control in the user interface (right side of screen) Create a new target as a trajectory Rename the trajectory with a name related to the target (e.g. LGPI, RSTN, LVIM, RM1, etc.) If using a version of Brainsight previous to 2.5.3 : Export trajectory with \"Export\" function and select \"Orientation (3 directions vectors)\" and \"NifTI:Scanner\" as the coordinate system. Take note of the path. Suggestion: Select a directory in the same path where T1W or SimNIBS output is located. This step is not required if using Brainsight version 2.5.3 and up.","title":"Planning"},{"location":"pipeline/Planning.html#planning","text":"The goal of the planning step is to produce a trajectory that provides the location where ultrasound is intended to be focused and the orientation of the transducer in T1W coordinate space. In practice, the trajectory is just an affine matrix applied to a \"virtual\" needle that describes the location and orientation where focused ultrasound is desired to be concentrated. The tip of the trajectory needs to be at the intended target. The position of the transducer will be relative to the tip location. The details using 3DSlicer can illustrate this.","title":"Planning"},{"location":"pipeline/Planning.html#acoustic-path-stl-helpers","text":"BabelBrain includes a series of complementary STL files representing the \"acoustic\" path. Each STL file includes a group of circular meshes combined with a target needle that represent the acoustic cross sections of a field produced with a transducer with F#=1.0 at different depths. As noted in the instructions below, these meshes help to verify a correct alignment with the skin.","title":"Acoustic path STL helpers"},{"location":"pipeline/Planning.html#planning-with-3dslicer","text":"Install the SlicerIGT extension in 3DSlicer (restart 3DSlicer if requested) Load T1W planning data In the IGT extension menu, select \"Create Models\" Load one of the STL helpers as a model with RAS coordinate convention. The model will appear by default centred in the T1W space and pointing in the inferior \\rightarrow \\rightarrow superior direction Alternatively, you can create a needle with a length of 100 mm. Select the model in the data panel and edit the properties to make it appear in the \"Slice Display\" Create a new transform and give it a name related to the target (e.g. LGPI, RSTN, LVIM, RM1, etc.). This is important as BabelBrain will use the name of the transform as a prefix for its output files. Apply the transform to the model and be sure the transformation is set to local (little button next to the \"invert\" button) Select \"Volume Reslice Driver\" in the IGT module menu Select the linear transform in the two first slice views Select one view to be \"Inplane\" and the other to be \"Inplane 90\" In the Data panel, select the linear transform and edit properties, you should be able to see the slice views aligned along the model Adjust the location of the tip of the needle using the translation (LR, PA, IS) controls to match the tip of the model to your area of interest. Adjust the trajectory path using the rotation (LR, PA, IS) controls until finding a trajectory that has a clear path and mimics how the transducer will be placed. Tip: Adjust the trajectory to make it orthogonal to the skin surface in the inline and inline90 views; this recreates the condition of placing a transducer aligned relative to the skin. Note: If you navigate to other windows in 3DSlicer, the transition and rotation control may be set back to 0s. But the transformation matrix will remain with the latest values applied. Any other adjustment will be added to the transformation matrix. Be sure that the local option is always selected. Save the transformation in text format. Select \"Save data\" and select text as the file format. Take note of the path. Suggestion: Select a directory in the same path where T1W or SimNIBS output is located.","title":"Planning with 3DSlicer"},{"location":"pipeline/Planning.html#planning-with-brainsight","text":"Alternatively, planning can also be performed with the proprietary software Brainsight made by Rogue Research (Montreal, Canada) for the planning and execution of non-invasive neuromodulation. This software has an existing feature that exports a trajectory that can be used in BabelBrain. The workflow to export a trajectory is very similar to 3DSlicer. Important : Starting with BabelBrain v0.3.2 and Brainsight v2.5.3, BabelBrain can be directly called from Brainsight, importing simulations automatically once the BabelBrain execution is completed. If using Brainsight v2.5.3, create a new \"SimNIBS\" project; If using an older version of Brainsight, create an \"empty\" project. If using \"SimNIBS\" project, it will preload the T1W imaging dataset automatically. Otherwise, load T1W planning data manually. Open target window Adjust coordinates and orientation with control in the user interface (right side of screen) Create a new target as a trajectory Rename the trajectory with a name related to the target (e.g. LGPI, RSTN, LVIM, RM1, etc.) If using a version of Brainsight previous to 2.5.3 : Export trajectory with \"Export\" function and select \"Orientation (3 directions vectors)\" and \"NifTI:Scanner\" as the coordinate system. Take note of the path. Suggestion: Select a directory in the same path where T1W or SimNIBS output is located. This step is not required if using Brainsight version 2.5.3 and up.","title":"Planning with Brainsight"},{"location":"pipeline/Preliminary_steps.html","text":"Preliminary steps Anatomical Imaging Collect T1W (and optionally T2W) imaging of a participant. T1W scan must be 1-mm isotropic scans. Optional : CT scan of the participant. Depending on the study being conducted, counting with a CT scan improves the precision of the simulation. Optional :: ZTE or PETRA scan of the participant. A pseudo-CT scan can be reconstructed using an ultrashort echo time (ZTE in GE, PETRA in Siemens) MRI scan. Details on MRI scan parameters and methods for pseudo-CT reconstruction (using the \"classical\" approach) can be found in the work presented by Miscouridou et al. (DOI: 10.1109/TUFFC.2022.3198522) and in the GitHub repository petra-to-ct , both from the UCL group. The user needs only to provide the Nifti file of the ZTE/PETRA scan. BabelBrain will do the transformation to pseudo-CT. A Nifti file with the pseudo-CT will be generated. Consult MRI Sequences for GE and Siemens scan settings recomendations Pre-processing Execute SimNIBS 4.x charm processing tool: charm <ID> <Path to T1W Nifti file> <Path to T2W Nifti file> <ID> is a string for identification. A subdirectory m2m_<ID> will be created. Take note of this directory, this will be referred to as the SimNIBS output directory in the following of this manual. Note : Sometimes, charm may complain that the qform and sform matrices are inconsistent. We have observed this when converting DICOM datasets with dcm2niix . If charm complains, you can try passing the --forceqform parameter when executing charm . Identify the coordinates of the target of focus ultrasound in T1W space. If you need to start in standardized space (e.g. MNI), there are many tools (FSL, SPM12, etc) that can be used to convert from standardized space to T1W space. For example, with FSL, a simple csv file ( mni.csv ) can be created with the coordinates in MNI such as -32.0 -20.0 65.0 . Then run the following commands flirt -in <path to T1W nifti> -ref $FSLDIR/data/standard/MNI152_T1_1mm -omat anat2mni.xfm -out anat_norm std2imgcoord -img <path to T1W nifti> -std $FSLDIR/data/standard/MNI152_T1_1mm.nii -xfm anat2mni.xfm mni.csv > natspace.csv The file natspace.csv will contain the MNI coordinates converted to T1W space. Please note that often visual inspections could be required to confirm the location. If no CT or ZTE scans are available, a mask representing the skull bone will be generated from the headreco or charm tools output. Be sure of inspecting the generated mask Nifti file to ensure the mask is correctly calculated. Our experience indicates that charm tool produces a better skull mask extraction. When using only T1W and T2W as inputs, BabelBrain uses a generic mask to represent the skull bone (including regions of trabecular and cortical bone). Average values of speed of sound and attenuation are assigned to these bone layers. Consult the appendix section for details on the values used. If a CT or ZTE scan is provided, a mapping of density, speed of sound and attenuation will be produced. Consult the appendix section for details on the mapping procedure.","title":"Preliminary steps"},{"location":"pipeline/Preliminary_steps.html#preliminary-steps","text":"","title":"Preliminary steps"},{"location":"pipeline/Preliminary_steps.html#anatomical-imaging","text":"Collect T1W (and optionally T2W) imaging of a participant. T1W scan must be 1-mm isotropic scans. Optional : CT scan of the participant. Depending on the study being conducted, counting with a CT scan improves the precision of the simulation. Optional :: ZTE or PETRA scan of the participant. A pseudo-CT scan can be reconstructed using an ultrashort echo time (ZTE in GE, PETRA in Siemens) MRI scan. Details on MRI scan parameters and methods for pseudo-CT reconstruction (using the \"classical\" approach) can be found in the work presented by Miscouridou et al. (DOI: 10.1109/TUFFC.2022.3198522) and in the GitHub repository petra-to-ct , both from the UCL group. The user needs only to provide the Nifti file of the ZTE/PETRA scan. BabelBrain will do the transformation to pseudo-CT. A Nifti file with the pseudo-CT will be generated. Consult MRI Sequences for GE and Siemens scan settings recomendations","title":"Anatomical Imaging"},{"location":"pipeline/Preliminary_steps.html#pre-processing","text":"Execute SimNIBS 4.x charm processing tool: charm <ID> <Path to T1W Nifti file> <Path to T2W Nifti file> <ID> is a string for identification. A subdirectory m2m_<ID> will be created. Take note of this directory, this will be referred to as the SimNIBS output directory in the following of this manual. Note : Sometimes, charm may complain that the qform and sform matrices are inconsistent. We have observed this when converting DICOM datasets with dcm2niix . If charm complains, you can try passing the --forceqform parameter when executing charm . Identify the coordinates of the target of focus ultrasound in T1W space. If you need to start in standardized space (e.g. MNI), there are many tools (FSL, SPM12, etc) that can be used to convert from standardized space to T1W space. For example, with FSL, a simple csv file ( mni.csv ) can be created with the coordinates in MNI such as -32.0 -20.0 65.0 . Then run the following commands flirt -in <path to T1W nifti> -ref $FSLDIR/data/standard/MNI152_T1_1mm -omat anat2mni.xfm -out anat_norm std2imgcoord -img <path to T1W nifti> -std $FSLDIR/data/standard/MNI152_T1_1mm.nii -xfm anat2mni.xfm mni.csv > natspace.csv The file natspace.csv will contain the MNI coordinates converted to T1W space. Please note that often visual inspections could be required to confirm the location. If no CT or ZTE scans are available, a mask representing the skull bone will be generated from the headreco or charm tools output. Be sure of inspecting the generated mask Nifti file to ensure the mask is correctly calculated. Our experience indicates that charm tool produces a better skull mask extraction. When using only T1W and T2W as inputs, BabelBrain uses a generic mask to represent the skull bone (including regions of trabecular and cortical bone). Average values of speed of sound and attenuation are assigned to these bone layers. Consult the appendix section for details on the values used. If a CT or ZTE scan is provided, a mapping of density, speed of sound and attenuation will be produced. Consult the appendix section for details on the mapping procedure.","title":"Pre-processing"},{"location":"pipeline/pipeline.html","text":"Pipeline description BabelBrain takes 3D imaging data (MRI and, if available, CT) along with a trajectory indicating the location and orientation of an ultrasound transducer to target a location in the brain. Currently, ten types of transducers are supported: Single . This is a simple focusing single-element transducer. The user can specify diameter, focal length and a frequency between 100 kHz and 1 MHz. H317 . This is a 128-element phased array with a focal length of 135 mm and F#=0.9. The device is capable to operate at 250, 700 and 825 kHz. CTX_250 . This is a device commercialized by the company BrainBox that has 4 ring elements, with a focal length of 63.2 mm and F# = 0.98, and operates at 250 kHz. The system can steer the focal spot location (measured by the center of half-peak intensity or -3dB) from 25 to 60 mm from the outplane of the device. CTX_500 . This is a device commercialized by the company BrainBox that has 4 ring elements, with a focal length of 63.2 mm and F# = 0.98, and operates at 500 kHz. The system can steer the focal spot location (measured by the center of half-peak intensity or -3dB) from 33 to 80 mm from the outplane of the device. DTX_500 . This is a device commercialized by the company BrainBox that has 4 ring elements, with a focal length of 144.9 mm and F# = 2.26, and operates at 500 kHz. The system can steer the focal spot location (measured by the center of half-peak intensity or -3dB) from 50 to 120 mm from the outplane of the device. H246 . This is a flat ring-type device that has 2 annular elements, with a diameter of 33.6 mm and operates at 500 kHz. It offers some degree of focusing by using two transducer elements. BSonix . These are devices commercialized by the company Brainsonix at fixed focal lengths of 35, 55, 65 and 80 mm as reported in Schafer et al. . I12378 . This is a 128-element device operating at 650 kHz with a focal length of 72 mm and F#=0.7. ATAC . This is a 128-element device operating at 1 MHz with a focal length 53.2 mm and F#=0.9. REMOPD . This is a 256-element flat 2D array commercialized by the company Fraunhofer IBMT capable to operate at 300 and 490 kHz with a diameter of 58 mm. The specific capabilities of each transducer are considered during the simulations. Overall workflow The typical TUS workflow working with BabelBrain is shown below The next sections cover these steps","title":"Overall pipeline"},{"location":"pipeline/pipeline.html#pipeline-description","text":"BabelBrain takes 3D imaging data (MRI and, if available, CT) along with a trajectory indicating the location and orientation of an ultrasound transducer to target a location in the brain. Currently, ten types of transducers are supported: Single . This is a simple focusing single-element transducer. The user can specify diameter, focal length and a frequency between 100 kHz and 1 MHz. H317 . This is a 128-element phased array with a focal length of 135 mm and F#=0.9. The device is capable to operate at 250, 700 and 825 kHz. CTX_250 . This is a device commercialized by the company BrainBox that has 4 ring elements, with a focal length of 63.2 mm and F# = 0.98, and operates at 250 kHz. The system can steer the focal spot location (measured by the center of half-peak intensity or -3dB) from 25 to 60 mm from the outplane of the device. CTX_500 . This is a device commercialized by the company BrainBox that has 4 ring elements, with a focal length of 63.2 mm and F# = 0.98, and operates at 500 kHz. The system can steer the focal spot location (measured by the center of half-peak intensity or -3dB) from 33 to 80 mm from the outplane of the device. DTX_500 . This is a device commercialized by the company BrainBox that has 4 ring elements, with a focal length of 144.9 mm and F# = 2.26, and operates at 500 kHz. The system can steer the focal spot location (measured by the center of half-peak intensity or -3dB) from 50 to 120 mm from the outplane of the device. H246 . This is a flat ring-type device that has 2 annular elements, with a diameter of 33.6 mm and operates at 500 kHz. It offers some degree of focusing by using two transducer elements. BSonix . These are devices commercialized by the company Brainsonix at fixed focal lengths of 35, 55, 65 and 80 mm as reported in Schafer et al. . I12378 . This is a 128-element device operating at 650 kHz with a focal length of 72 mm and F#=0.7. ATAC . This is a 128-element device operating at 1 MHz with a focal length 53.2 mm and F#=0.9. REMOPD . This is a 256-element flat 2D array commercialized by the company Fraunhofer IBMT capable to operate at 300 and 490 kHz with a diameter of 58 mm. The specific capabilities of each transducer are considered during the simulations.","title":"Pipeline description"},{"location":"pipeline/pipeline.html#overall-workflow","text":"The typical TUS workflow working with BabelBrain is shown below The next sections cover these steps","title":"Overall workflow"},{"location":"results/results.html","text":"Results files Multiple files are generated and will be saved in the same directory where the input T1W file is located. These are the most relevant files. 1 - Input mask in Nifti format <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_BabelViscoInput.nii.gz For example: STN_CTX_500_250kHz_6PPW_BabelViscoInput.nii.gz This file contains the 3D mask in T1W coordinates. The raw 3D array is arranged to be aligned to create a Cartesian domain aligned following the trajectory specified by the user. Skin, cortical, trabecular, cortical, and brain tissues are defined with values of 1, 2,3 and 4, respectively. If a ZTE or real CT scan was indicated as input, the files <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.nii.gz and <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.npz will be also present. The <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.nii.gz is a map of unique CT values (re-quantified in 12 bits). <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.npz contains the indexing of unique CT map values to HU. 2 - Acoustic pressure field results in Nifti format <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_FullElasticSolution.nii.gz For example: STN_CTX_500_250kHz_6PPW_FullElasticSolution.nii.gz This file contains the 3D pressure field in T1W coordinates subsampled with a 1:2 ratio for visualization tool that cannot handle very high-resolution Nifti files. <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_FullElasticSolution_Sub.nii.gz This a sub-domain version with the original simulation resolution, suitable with tools such as fsleyes and 3DSlicer. <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_FullElasticSolution_Sub_NORM.nii.gz This a sub-domain version with the original simulation resolution, normalized (0.0 to 1.0) with the pressure values in the brain region. All other tissue regions are set to 0.0. This file facilitates visualization to different normalized thresholds (e.g., 0.25, 0.5, etc.). Suitable with tools such as fsleyes and 3DSlicer. Supplementary Nifti files showing results for benchmarking are also saved. For example results in water-only conditions, including with Rayleigh integral. Water-conditions results are also needed to calculate the required I_{SPPA} I_{SPPA} value to use to program devices during real experimentations. These acoustic maps should be considered adimensional and are mostly used for visualization purposes. 3 - STL files BabelBrain will generate STL files of the transducer that will be in T1W coordinates and aligned using the planning and simulation information. If using 'charm' from Simbnibs 4.0, BabelBrain will generate STL files for skin, csf and skull regions ( skin.stl , csf.stl , bone.stl ) in the directory specified for charm output. Below there is an example of visualization of STL files of transducer, skin and acoustic maps overlay with planning T1W imaging. 2 - Thermal and intensity maps: <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_DataForSim-ThermalField-<Timming IDs>.h5 For example: STN_CTX_500_500kHz_6PPW_DataForSim-ThermalField-Duration-40-DurationOff-40-DC-300-Isppa-5.0W-PRF-10Hz.h5 . These are HDF5 files (also saved in Matlab .mat format) that contains multiple variables and arrays. BabelBrain contains functions to read and write HDF5 files in a simplified way (similar to Matlab and npz format). Below there is simple code to printout the variables in the files. from BabelViscoFDTD.H5pySimple import ReadFromH5py import pprint pp = pprint.PrettyPrinter(indent=4, width=50) Data=ReadFromH5py('STN_CTX_500_500kHz_6PPW_DataForSim-ThermalField-Duration-40-DurationOff-40-DC-300-Isppa-5.0W-PRF-10Hz.h5') pp.pprint(list(Data.keys())) [ 'AdjustmentInRAS', 'CEMBrain', 'CEMSkin', 'CEMSkull', 'DistanceFromSkin', 'DoseEndFUS', 'FinalDose', 'FinalTemp', 'Isppa', 'Ispta', 'MI', 'MaterialList', 'MaterialMap', 'MaterialMap_central', 'MaxBrainPressure', 'MaxIsppa', 'MaxIspta', 'MonitorSlice', 'RatioLosses', 'TI', 'TIC', 'TIS', 'TargetLocation', 'TempEndFUS', 'TempProfileTarget', 'TemperaturePoints', 'TimeProfileTarget', 'TxMechanicalAdjustmentZ', 'ZSteering', 'dt', 'mBrain', 'mSkin', 'mSkull', 'p_map', 'p_map_central', 'x_vec', 'y_vec', 'z_vec'] These files are generated in function of the thermal profiles chosen for the simulations. There would be one file for each combination of duration, duty cycle and pulse repetition. Thermal maps and acoustic intensity are calculated assuming a I_{SPPA} I_{SPPA} of 5 W/cm ^2 ^2 at the target. BabelBrain scales results based on this intensity. Below there is a simple code showing how BabelBrain calculates and displays results scaled to a desired I_{SPPA} I_{SPPA} of 10 W/cm ^2 ^2 . import matplotlib.pyplot as plt import numpy as np def RCoeff(Temperature): R = np.ones(Temperature.shape)*0.25 R[Temperature>=43]=0.5 return R #### Selected Isppa SelIsppa=10.0 #### BaseIsppa = 5.0 DutyCycle=0.3 Loc=DataThermal['TargetLocation'] xf=DataThermal['x_vec'] zf=DataThermal['z_vec'] SelY=Loc[1] SkinZ=np.array(np.where(DataThermal['MaterialMap'][:,SelY,:]==1)).T.min(axis=0)[1] zf-=zf[SkinZ] IsppaRatio=SelIsppa/BaseIsppa PresRatio=np.sqrt(IsppaRatio) AdjustedIsspa = SelIsppa/DataThermal['RatioLosses'] Ispta=SelIsppa*DutyCycle AdjustedTemp=(DataThermal['TemperaturePoints']-37)*IsppaRatio+37 #thermal dose in minutes DoseUpdate=np.sum(RCoeff(AdjustedTemp)**(43.0-AdjustedTemp),axis=1)*DataThermal['dt']/60 MI=DataThermal['MI']*PresRatio MTB=DataThermal['TI']*IsppaRatio+37 MTC=DataThermal['TIC']*IsppaRatio+37 MTS=DataThermal['TIS']*IsppaRatio+37 CEMS=DoseUpdate[0] CEMB=DoseUpdate[1] CEMC=DoseUpdate[2] print('Maximal temperature at skin, brain and skull = %3.2f, %3.2f, %3.2f' %(MTB,MTC,MTS)) print('Maximal thermal dose at skin, brain and skull', CEMS,CEMB,CEMC) ### # We plot maps at target plane and ovel time DensityMap=DataThermal['MaterialList']['Density'][DataThermal['MaterialMap'][:,SelY,:]] SoSMap= DataThermal['MaterialList']['SoS'][DataThermal['MaterialMap'][:,SelY,:]] IntensityMap=(DataThermal['p_map'][:,SelY,:]**2/2/DensityMap/SoSMap/1e4*IsppaRatio).T IntensityMap[0,:]=0 Tmap=(DataThermal['TempEndFUS'][:,SelY,:]-37.0)*IsppaRatio+37.0 figure=plt.figure(figsize=(10, 4.5)) static_ax1,static_ax2 = figure.subplots(1,2) IntensityIm=static_ax1.imshow(IntensityMap,extent=[xf.min(),xf.max(),zf.max(),zf.min()], cmap=plt.cm.jet) static_ax1.plot(xf[Loc[0]],zf[Loc[2]],'k+',markersize=18) static_ax1.set_title('Isppa (W/cm$^2$)') plt.colorbar(IntensityIm,ax=static_ax1) XX,ZZ=np.meshgrid(xf,zf) contour1=static_ax1.contour(XX,ZZ,DataThermal['MaterialMap'][:,SelY,:].T,[0,1,2,3], cmap=plt.cm.gray) static_ax1.set_ylabel('Distance from skin (mm)') ThermalIm=static_ax2.imshow(Tmap.T, extent=[xf.min(),xf.max(),zf.max(),zf.min()],cmap=plt.cm.jet,vmin=37) static_ax2.plot(xf[Loc[0]],zf[Loc[2]],'k+',markersize=18) static_ax2.set_title('Temperature ($^{\\circ}$C)') plt.colorbar(ThermalIm,ax=static_ax2) contour2=static_ax2.contour(XX,ZZ,DataThermal['MaterialMap'][:,SelY,:].T,[0,1,2,3], cmap=plt.cm.gray) plt.figure(figsize=(10, 4.5)) plt.plot(DataThermal['TimeProfileTarget'],AdjustedTemp.T) plt.legend(['Skin','Brain','Skull']) plt.xlabel('time (s)');plt.ylabel('Temperature ($^{\\circ}$C)') plt.title('Maximal temperature') Maximal temperature at skin, brain and skull = 37.67, 37.36, 37.27 Maximal thermal dose at skin, brain and skull 0.0006094899601355539 0.0007513694465752783 0.0006360966246583003","title":"Results files"},{"location":"results/results.html#results-files","text":"Multiple files are generated and will be saved in the same directory where the input T1W file is located. These are the most relevant files.","title":"Results files"},{"location":"results/results.html#1-input-mask-in-nifti-format","text":"<Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_BabelViscoInput.nii.gz For example: STN_CTX_500_250kHz_6PPW_BabelViscoInput.nii.gz This file contains the 3D mask in T1W coordinates. The raw 3D array is arranged to be aligned to create a Cartesian domain aligned following the trajectory specified by the user. Skin, cortical, trabecular, cortical, and brain tissues are defined with values of 1, 2,3 and 4, respectively. If a ZTE or real CT scan was indicated as input, the files <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.nii.gz and <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.npz will be also present. The <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.nii.gz is a map of unique CT values (re-quantified in 12 bits). <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_CT.npz contains the indexing of unique CT map values to HU.","title":"1 - Input mask in Nifti format"},{"location":"results/results.html#2-acoustic-pressure-field-results-in-nifti-format","text":"<Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_FullElasticSolution.nii.gz For example: STN_CTX_500_250kHz_6PPW_FullElasticSolution.nii.gz This file contains the 3D pressure field in T1W coordinates subsampled with a 1:2 ratio for visualization tool that cannot handle very high-resolution Nifti files. <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_FullElasticSolution_Sub.nii.gz This a sub-domain version with the original simulation resolution, suitable with tools such as fsleyes and 3DSlicer. <Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_FullElasticSolution_Sub_NORM.nii.gz This a sub-domain version with the original simulation resolution, normalized (0.0 to 1.0) with the pressure values in the brain region. All other tissue regions are set to 0.0. This file facilitates visualization to different normalized thresholds (e.g., 0.25, 0.5, etc.). Suitable with tools such as fsleyes and 3DSlicer. Supplementary Nifti files showing results for benchmarking are also saved. For example results in water-only conditions, including with Rayleigh integral. Water-conditions results are also needed to calculate the required I_{SPPA} I_{SPPA} value to use to program devices during real experimentations. These acoustic maps should be considered adimensional and are mostly used for visualization purposes.","title":"2 - Acoustic pressure field results in Nifti format"},{"location":"results/results.html#3-stl-files","text":"BabelBrain will generate STL files of the transducer that will be in T1W coordinates and aligned using the planning and simulation information. If using 'charm' from Simbnibs 4.0, BabelBrain will generate STL files for skin, csf and skull regions ( skin.stl , csf.stl , bone.stl ) in the directory specified for charm output. Below there is an example of visualization of STL files of transducer, skin and acoustic maps overlay with planning T1W imaging.","title":"3 - STL files"},{"location":"results/results.html#2-thermal-and-intensity-maps","text":"<Target ID>_<Tx ID>_<Frequency ID>_<PPW ID>_DataForSim-ThermalField-<Timming IDs>.h5 For example: STN_CTX_500_500kHz_6PPW_DataForSim-ThermalField-Duration-40-DurationOff-40-DC-300-Isppa-5.0W-PRF-10Hz.h5 . These are HDF5 files (also saved in Matlab .mat format) that contains multiple variables and arrays. BabelBrain contains functions to read and write HDF5 files in a simplified way (similar to Matlab and npz format). Below there is simple code to printout the variables in the files. from BabelViscoFDTD.H5pySimple import ReadFromH5py import pprint pp = pprint.PrettyPrinter(indent=4, width=50) Data=ReadFromH5py('STN_CTX_500_500kHz_6PPW_DataForSim-ThermalField-Duration-40-DurationOff-40-DC-300-Isppa-5.0W-PRF-10Hz.h5') pp.pprint(list(Data.keys())) [ 'AdjustmentInRAS', 'CEMBrain', 'CEMSkin', 'CEMSkull', 'DistanceFromSkin', 'DoseEndFUS', 'FinalDose', 'FinalTemp', 'Isppa', 'Ispta', 'MI', 'MaterialList', 'MaterialMap', 'MaterialMap_central', 'MaxBrainPressure', 'MaxIsppa', 'MaxIspta', 'MonitorSlice', 'RatioLosses', 'TI', 'TIC', 'TIS', 'TargetLocation', 'TempEndFUS', 'TempProfileTarget', 'TemperaturePoints', 'TimeProfileTarget', 'TxMechanicalAdjustmentZ', 'ZSteering', 'dt', 'mBrain', 'mSkin', 'mSkull', 'p_map', 'p_map_central', 'x_vec', 'y_vec', 'z_vec'] These files are generated in function of the thermal profiles chosen for the simulations. There would be one file for each combination of duration, duty cycle and pulse repetition. Thermal maps and acoustic intensity are calculated assuming a I_{SPPA} I_{SPPA} of 5 W/cm ^2 ^2 at the target. BabelBrain scales results based on this intensity. Below there is a simple code showing how BabelBrain calculates and displays results scaled to a desired I_{SPPA} I_{SPPA} of 10 W/cm ^2 ^2 . import matplotlib.pyplot as plt import numpy as np def RCoeff(Temperature): R = np.ones(Temperature.shape)*0.25 R[Temperature>=43]=0.5 return R #### Selected Isppa SelIsppa=10.0 #### BaseIsppa = 5.0 DutyCycle=0.3 Loc=DataThermal['TargetLocation'] xf=DataThermal['x_vec'] zf=DataThermal['z_vec'] SelY=Loc[1] SkinZ=np.array(np.where(DataThermal['MaterialMap'][:,SelY,:]==1)).T.min(axis=0)[1] zf-=zf[SkinZ] IsppaRatio=SelIsppa/BaseIsppa PresRatio=np.sqrt(IsppaRatio) AdjustedIsspa = SelIsppa/DataThermal['RatioLosses'] Ispta=SelIsppa*DutyCycle AdjustedTemp=(DataThermal['TemperaturePoints']-37)*IsppaRatio+37 #thermal dose in minutes DoseUpdate=np.sum(RCoeff(AdjustedTemp)**(43.0-AdjustedTemp),axis=1)*DataThermal['dt']/60 MI=DataThermal['MI']*PresRatio MTB=DataThermal['TI']*IsppaRatio+37 MTC=DataThermal['TIC']*IsppaRatio+37 MTS=DataThermal['TIS']*IsppaRatio+37 CEMS=DoseUpdate[0] CEMB=DoseUpdate[1] CEMC=DoseUpdate[2] print('Maximal temperature at skin, brain and skull = %3.2f, %3.2f, %3.2f' %(MTB,MTC,MTS)) print('Maximal thermal dose at skin, brain and skull', CEMS,CEMB,CEMC) ### # We plot maps at target plane and ovel time DensityMap=DataThermal['MaterialList']['Density'][DataThermal['MaterialMap'][:,SelY,:]] SoSMap= DataThermal['MaterialList']['SoS'][DataThermal['MaterialMap'][:,SelY,:]] IntensityMap=(DataThermal['p_map'][:,SelY,:]**2/2/DensityMap/SoSMap/1e4*IsppaRatio).T IntensityMap[0,:]=0 Tmap=(DataThermal['TempEndFUS'][:,SelY,:]-37.0)*IsppaRatio+37.0 figure=plt.figure(figsize=(10, 4.5)) static_ax1,static_ax2 = figure.subplots(1,2) IntensityIm=static_ax1.imshow(IntensityMap,extent=[xf.min(),xf.max(),zf.max(),zf.min()], cmap=plt.cm.jet) static_ax1.plot(xf[Loc[0]],zf[Loc[2]],'k+',markersize=18) static_ax1.set_title('Isppa (W/cm$^2$)') plt.colorbar(IntensityIm,ax=static_ax1) XX,ZZ=np.meshgrid(xf,zf) contour1=static_ax1.contour(XX,ZZ,DataThermal['MaterialMap'][:,SelY,:].T,[0,1,2,3], cmap=plt.cm.gray) static_ax1.set_ylabel('Distance from skin (mm)') ThermalIm=static_ax2.imshow(Tmap.T, extent=[xf.min(),xf.max(),zf.max(),zf.min()],cmap=plt.cm.jet,vmin=37) static_ax2.plot(xf[Loc[0]],zf[Loc[2]],'k+',markersize=18) static_ax2.set_title('Temperature ($^{\\circ}$C)') plt.colorbar(ThermalIm,ax=static_ax2) contour2=static_ax2.contour(XX,ZZ,DataThermal['MaterialMap'][:,SelY,:].T,[0,1,2,3], cmap=plt.cm.gray) plt.figure(figsize=(10, 4.5)) plt.plot(DataThermal['TimeProfileTarget'],AdjustedTemp.T) plt.legend(['Skin','Brain','Skull']) plt.xlabel('time (s)');plt.ylabel('Temperature ($^{\\circ}$C)') plt.title('Maximal temperature') Maximal temperature at skin, brain and skull = 37.67, 37.36, 37.27 Maximal thermal dose at skin, brain and skull 0.0006094899601355539 0.0007513694465752783 0.0006360966246583003","title":"2 - Thermal and intensity maps:"}]}